blueprint:
  name: Area Light management
  description: Area Light management
  domain: automation
  input:
    area_id:
      name: area_id
      description: Choose area to control
      selector:
        area: {}
    brightness_input_control:
      name: brightness_input_control
      description: Put tag id that commands brightness increase
      selector:
        entity:
          domain: input_number

    color_position_control:
      name: color position counter to store current selection
      selector:
        entity:
          domain: input_counter
variables:
  area_id: !input 'area_id'
  brightness_input_control: !input brightness_input_control
  color_position_control: !input color_position_control

action:
  - variables:
    colors:
      - color_data:
          color_name: red
          brightness_pct: "{{ states(brightness_input_control) }}"
        area: "{{area_id}}"
      - color_data:
          color_name: lightgreen
          brightness_pct: "{{ states(brightness_input_control) }}"
        area: "{{area_id}}"
      - color_data:
          color_name: orange
          brightness_pct: "{{ states(brightness_input_control) }}"
        area: "{{area_id}}"
      - color_data:
          color_name: blue
          brightness_pct: "{{ states(brightness_input_control) }}"
        area: "{{area_id}}"
      - color_data:
          color_name: pink
          brightness_pct: "{{ states(brightness_input_control) }}"
        area: "{{area_id}}"
      - color_data:
          color_name: teal
          brightness_pct: "{{ states(brightness_input_control) }}"
        area: "{{area_id}}"
      - color_data:
          kelvin: "2000"
          brightness_pct: "{{ states(brightness_input_control) }}"
        area: "{{area_id}}"
      - color_data:
          kelvin: "3500"
          brightness_pct: "{{ states(brightness_input_control) }}"
        area: "{{area_id}}"
      - color_data:
          kelvin: "6500"
          brightness_pct: "{{ states(brightness_input_control) }}"
        area: "{{area_id}}"
    current_color: "{{states(color_position_control)}}"
    selected_color: "{{colors[current_color % 9]}}"
  - service: counter.increment
    data: {}
    target:
      entity_id: "{{color_position_control}}"
  - event: test_event
    event_data:
      value: "{{selected_color}}"
      color: "{{current_color}}"
mode: single